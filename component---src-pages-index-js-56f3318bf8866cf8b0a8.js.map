{"version":3,"sources":["webpack:///./src/components/TotalWalletValue/TotalWalletValue.js","webpack:///./src/components/Dialog/AddCurrencyForm/AddCurrencyForm.js","webpack:///./src/components/Dialog/SendCurrencyForm/SendCurrencyForm.js","webpack:///./src/components/Dialog/ConvertCurrencyForm/ConvertCurrencyForm.js","webpack:///./src/components/Dialog/Dialog.js","webpack:///./src/components/CurrencyCard/CurrencyCard.js","webpack:///./src/components/LatestActivity/LatestActivity.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TotalWalletValue","props","react_default","a","createElement","style","marginBottom","borderStyle","borderColor","borderWidth","index_es","align","color","fontSize","sum","OutlinedTextFields","render","_this","this","_this$props","classes","prefix","className","container","noValidate","autoComplete","onSubmit","e","handleAddCurrency","TextField_default","id","label","onChange","handleChange","type","name","textField","InputLabelProps","shrink","margin","variant","marginLeft","onClick","handleClose","React","Component","propTypes","PropTypes","object","isRequired","withStyles","theme","display","flexWrap","spacing","unit","marginRight","dense","marginTop","menu","width","event","_this$setState","setState","target","value","Fragment","currencies","state","currency","originalCurrencyAmount","_ref","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","console","log","stop","_x","apply","arguments","handleSubmit","preventDefault","originalCurrency","_this$state","handleConvert","select","SelectProps","MenuProps","helperText","map","option","MenuItem_default","key","Transition","Slide_default","Object","assign","direction","FullScreenDialog","open","handleClickOpen","title","Button_default","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","appBar","Toolbar_default","IconButton_default","aria-label","Close_default","Typography_default","flex","maxWidth","AddCurrencyForm","SendCurrencyForm","ConvertCurrencyForm","position","DetailedExpansionPanel","currencyName","balance","root","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","column","heading","secondaryHeading","ExpansionPanelDetails_default","details","topMargin","classNames","helper","href","link","Divider_default","ExpansionPanelActions_default","rightMargin","Dialog_Dialog","gatsby_browser_entry","to","size","typography","pxToRem","palette","text","secondary","icon","verticalAlign","height","alignItems","flexBasis","borderLeft","divider","padding","primary","main","textDecoration","&:hover","LatestActivity","activity","item","i","index","addAmount","USD_wallet","EUR_wallet","CHF_wallet","totalValueUSD","_e$target","_callee2","date","newActivityString","_context2","Date","t0","parseInt","concat","AddAmount","calculateTotalSumInDollars","abrupt","_this$state2","newAmount","convertUSDtoEUR","convertUSDtoCHF","convertEURtoUSD","convertEURtoCHF","convertCHFtoUSD","convertCHFtoEUR","amount","_this$state3","componentWillMount","Layout","components_TotalWalletValue_TotalWalletValue","CurrencyCard","components_LatestActivity_LatestActivity","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","string","func","mobileOpen","handleDrawerToggle","children","drawer","react__WEBPACK_IMPORTED_MODULE_1___default","toolbar","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_9___default","gatsby__WEBPACK_IMPORTED_MODULE_17__","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_10___default","button","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_8___default","menuButton","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_14___default","noWrap","_material_ui_core_Hidden__WEBPACK_IMPORTED_MODULE_7___default","smUp","implementation","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_6___default","anchor","paper","drawerPaper","xsDown","content","_drawer","_appBar","_menuButton","breakpoints","up","flexShrink","mixins","flexGrow","withTheme","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-index-js-56f3318bf8866cf8b0a8.js","sourcesContent":["import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\n\r\nconst TotalWalletValue = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        marginBottom: \"1rem\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"#3F51B5\",\r\n        borderWidth: \"0.6px\",\r\n      }}\r\n    >\r\n      <Typography align=\"center\" color=\"primary\" style={{ fontSize: \"1.2rem\" }}>\r\n        {\"Total value: \" + props.sum + \"USD\"}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TotalWalletValue\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\n\r\nimport { Button } from \"@material-ui/core\"\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n})\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n  render() {\r\n    const { classes, prefix } = this.props\r\n\r\n    return (\r\n      <form\r\n        className={classes.container}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={e => this.props.handleAddCurrency(e, prefix)}\r\n      >\r\n        <TextField\r\n          id=\"outlined-number\"\r\n          label={\"Amount of \" + prefix + \" to be added\"}\r\n          onChange={this.props.handleChange}\r\n          type=\"number\"\r\n          name=\"addAmount\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n        <br />\r\n        <Button\r\n          style={{ marginLeft: \"0.5rem\" }}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.props.handleClose}\r\n        >\r\n          Add\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(OutlinedTextFields)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n})\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Sorry this Function is not yet implemented!</h1>\r\n        <p>But stay tuned!</p>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(OutlinedTextFields)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { Button } from \"@material-ui/core\"\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n})\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"USD\",\r\n    label: \"$\",\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"€\",\r\n  },\r\n  {\r\n    value: \"CHF\",\r\n    label: \"CHF\",\r\n  },\r\n]\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n  state = {\r\n    currency: \"EUR\",\r\n    originalCurrencyAmount: 0,\r\n  }\r\n\r\n  handleChange = name => async event => {\r\n    await this.setState({\r\n      [name]: event.target.value,\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    let originalCurrency = this.props.prefix\r\n    let { currency, originalCurrencyAmount } = this.state\r\n    console.log(originalCurrencyAmount + originalCurrency + \"to\" + currency)\r\n    this.props.handleConvert(originalCurrency, originalCurrencyAmount, currency)\r\n  }\r\n\r\n  render() {\r\n    const { classes, prefix } = this.props\r\n\r\n    return (\r\n      <form\r\n        type=\"submit\"\r\n        className={classes.container}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        {/* HOW MUCH FROM THE PREFIX CURRENCY SHALL BE CONVERTED */}\r\n        <TextField\r\n          id=\"outlined-number\"\r\n          label={\"Amount in \" + prefix}\r\n          onChange={this.handleChange(\"originalCurrencyAmount\")}\r\n          type=\"number\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        <label>To:</label>\r\n        <br />\r\n        {/* INTO WHAT CURRENCY SHALL THE AMOUNT BE CONVERTED TO */}\r\n        <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"\"\r\n          className={classes.textField}\r\n          value={this.state.currency}\r\n          onChange={this.handleChange(\"currency\")}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"Please select your currency\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        >\r\n          {currencies.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.props.handleClose}\r\n        >\r\n          Convert\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(OutlinedTextFields)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\n\r\nimport AddCurrencyForm from \"./AddCurrencyForm/AddCurrencyForm\"\r\nimport SendCurrencyForm from \"./SendCurrencyForm/SendCurrencyForm\"\r\nimport ConvertCurrencyForm from \"./ConvertCurrencyForm/ConvertCurrencyForm\"\r\n\r\nconst styles = {\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n}\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nclass FullScreenDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  render() {\r\n    const { classes, title, prefix } = this.props\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={this.handleClickOpen}\r\n        >\r\n          {title}\r\n        </Button>\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={this.handleClose}\r\n                aria-label=\"Close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                {title}\r\n              </Typography>\r\n              <Button color=\"inherit\" onClick={this.handleClose}>\r\n                Close\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div\r\n            style={{ marginTop: \"2rem\", marginLeft: \"2rem\", maxWidth: \"960px\" }}\r\n          >\r\n            {title[0] === \"A\" ? (\r\n              <AddCurrencyForm\r\n                handleChange={this.props.handleChange}\r\n                handleAddCurrency={this.props.handleAddCurrency}\r\n                handleClose={this.handleClose}\r\n                prefix={prefix}\r\n              />\r\n            ) : title[0] === \"S\" ? (\r\n              <SendCurrencyForm />\r\n            ) : (\r\n              <ConvertCurrencyForm\r\n                prefix={prefix}\r\n                handleClose={this.handleClose}\r\n                handleConvert={this.props.handleConvert}\r\n              />\r\n            )}\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFullScreenDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(FullScreenDialog)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport classNames from \"classnames\"\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\n\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n})\r\n\r\nfunction DetailedExpansionPanel(props) {\r\n  const { classes, prefix, currencyName, balance } = props\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* REMOVE DEFAULT EXPAND {defaultExpanded} AFTER DEVELOPMENT */}\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          {/* TITLE OF THE CARD */}\r\n          <div className={classes.column}>\r\n            {/* ######################TITLE OF THE CARD####################### */}\r\n            <Typography\r\n              className={classes.heading}\r\n              style={{ fontSize: \"1.3rem\" }}\r\n            >\r\n              <strong>\r\n                {balance}\r\n                {prefix}\r\n              </strong>\r\n            </Typography>\r\n            <Typography variant=\"caption\" style={{ fontSize: \"1rem\" }}>\r\n              {currencyName}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>\r\n              Expand for details\r\n            </Typography>\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          {/* ######################FIRST COLUMN#################################### */}\r\n          <div className={classes.column}>\r\n            {/*ACCOUNT HOLDER FIELD */}\r\n            <Typography variant=\"caption\">Account Holder:</Typography>\r\n            <Typography>Savvi.io FBO John Doe</Typography>\r\n\r\n            {/*BANK CODE FIELD */}\r\n            <Typography variant=\"caption\" style={topMargin}>\r\n              Bank Code (SWIFT / BIC):\r\n            </Typography>\r\n            <Typography>XXXXXXXXXX</Typography>\r\n\r\n            {/*ADRESS NUMBER FIELD */}\r\n            <Typography variant=\"caption\" style={topMargin}>\r\n              Adress:\r\n            </Typography>\r\n            <Typography>\r\n              Savvi.io\r\n              <br />\r\n              16W Street, Geneva, Switzerland\r\n            </Typography>\r\n          </div>\r\n          {/* #####################SECOND COLUMN######################################### */}\r\n          <div className={classNames(classes.column, classes.helper)}>\r\n            {/*ACCOUNT NUMBER FIELD */}\r\n            <Typography variant=\"caption\">Account Number:</Typography>\r\n            <Typography>XXXXXXXXXX</Typography>\r\n            {/*WIRE TRANSFER NUMBER FIELD */}\r\n            <Typography variant=\"caption\" style={topMargin}>\r\n              Wire Transfer Number:\r\n            </Typography>\r\n            <Typography>XXXXXXXXXX</Typography>\r\n            {/*ROUTING NUMBER FIELD */}\r\n            <Typography variant=\"caption\" style={topMargin}>\r\n              Routing Number (ACH or ABA):\r\n            </Typography>\r\n            <Typography>XXXXXXXXXX</Typography>\r\n            <br />\r\n            <Typography variant=\"caption\">\r\n              How do I use these?\r\n              <br />\r\n              <a href=\"#sub-labels-and-columns\" className={classes.link}>\r\n                Learn more\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n        <Divider />\r\n        <ExpansionPanelActions>\r\n          {/* ################BUTTONS############################ */}\r\n\r\n          <div style={rightMargin}>\r\n            <Dialog\r\n              title={\"Add \" + prefix}\r\n              prefix={prefix}\r\n              handleChange={props.handleChange}\r\n              handleAddCurrency={props.handleAddCurrency}\r\n            />\r\n          </div>\r\n\r\n          <div style={rightMargin}>\r\n            <Dialog title={\"Send \" + prefix} prefix={prefix} />\r\n          </div>\r\n\r\n          <Dialog\r\n            title={\"Convert \" + prefix}\r\n            prefix={prefix}\r\n            handleConvert={props.handleConvert}\r\n          />\r\n          <Link to=\"/faq\">\r\n            <Button size=\"small\">More</Button>\r\n          </Link>\r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst topMargin = {\r\n  marginTop: \"0.5rem\",\r\n}\r\n\r\nconst rightMargin = {\r\n  marginRight: \"0.5rem\",\r\n}\r\n\r\nDetailedExpansionPanel.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(DetailedExpansionPanel)\r\n","import React from \"react\"\r\n\r\nconst LatestActivity = props => {\r\n  return (\r\n    <div>\r\n      <h3>Latest Activity:</h3>\r\n      <ul>\r\n        {props.activity.map((item, i) => (\r\n          <li style={{ marginTop: \"1.5rem\" }} key={i}>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LatestActivity\r\n","import React, { Component } from \"react\"\r\n\r\nimport Layout from \"../components/Layout/Layout\"\r\nimport TotalWalletValue from \"../components/TotalWalletValue/TotalWalletValue\"\r\nimport CurrencyCard from \"../components/CurrencyCard/CurrencyCard\"\r\nimport LatestActivity from \"../components/LatestActivity/LatestActivity\"\r\nimport { Typography } from \"@material-ui/core\"\r\n\r\nexport default class index extends Component {\r\n  state = {\r\n    addAmount: 0,\r\n    activity: [],\r\n    USD_wallet: 100,\r\n    EUR_wallet: 500,\r\n    CHF_wallet: 10000,\r\n    totalValueUSD: null,\r\n  }\r\n\r\n  //THIS FUNCTION HANDLES CHANGE OF INPUT FIELDS AND ADDS IT TO THE STATE\r\n  handleChange = async e => {\r\n    e.preventDefault()\r\n    let { name, value } = e.target\r\n\r\n    await this.setState({ [name]: value })\r\n    console.log(this.state)\r\n  }\r\n\r\n  //THIS FUNCTION HANDLES THE ADDITION OF CURRENCY TO RESPECTIVE WALLETS\r\n  handleAddCurrency = async (e, prefix) => {\r\n    let { USD_wallet, EUR_wallet, CHF_wallet, addAmount } = this.state\r\n    e.preventDefault()\r\n    console.log(prefix)\r\n    console.log(\"The ADD button was pressed\")\r\n    let date = Date()\r\n    let newActivityString = date + \": Added: \" + addAmount + prefix\r\n    console.log(newActivityString)\r\n    switch (prefix) {\r\n      case \"USD\":\r\n        //PUSH THE ADDED AMOUNT TO DATABASE\r\n        await this.setState({\r\n          USD_wallet: parseInt(USD_wallet) + parseInt(addAmount),\r\n          activity: [newActivityString, ...this.state.activity],\r\n          AddAmount: 0,\r\n        })\r\n        this.calculateTotalSumInDollars()\r\n        break\r\n      case \"EUR\":\r\n        //PUSH THE ADDED AMOUNT TO DATABASE\r\n        await this.setState({\r\n          EUR_wallet: parseInt(EUR_wallet) + parseInt(addAmount),\r\n          activity: [newActivityString, ...this.state.activity],\r\n          AddAmount: 0,\r\n        })\r\n        this.calculateTotalSumInDollars()\r\n        break\r\n      case \"CHF\":\r\n        //PUSH THE ADDED AMOUNT TO DATABASE\r\n        await this.setState({\r\n          CHF_wallet: parseInt(CHF_wallet) + parseInt(addAmount),\r\n          activity: [newActivityString, ...this.state.activity],\r\n          AddAmount: 0,\r\n        })\r\n        this.calculateTotalSumInDollars()\r\n        break\r\n      default:\r\n        //CREATE AN ERROR MESSAGE\r\n        break\r\n    }\r\n  }\r\n\r\n  //THIS FUNCTION HANDLES CONVERSION BETWEEN CURRENCIES\r\n  handleConvert = (originalCurrency, originalCurrencyAmount, currency) => {\r\n    console.log(\"We are now in the handleConvert function\")\r\n    console.log(\"We have received the following:\")\r\n    console.log(\"Convert From: \" + originalCurrency)\r\n    console.log(\"The amount to be converted: \" + originalCurrencyAmount)\r\n    console.log(\"Into: \" + currency)\r\n\r\n    //PULL VARIABLED OUT OF THE STATE\r\n    let { USD_wallet, EUR_wallet, CHF_wallet } = this.state\r\n\r\n    //USE THIS DATE TO MARK THE TIME OF THE CONVERSION\r\n    let date = Date()\r\n\r\n    //UPDATE ACTIVITY ARRAY\r\n    this.setState({\r\n      activity: [\r\n        date +\r\n          \": Converted: \" +\r\n          originalCurrencyAmount +\r\n          originalCurrency +\r\n          \" to \" +\r\n          currency,\r\n        ...this.state.activity,\r\n      ],\r\n    })\r\n\r\n    //THIS BLOCK DETERMINES THE RIGHT CONVERSTION TO MAKE AND SUBTRACTS FROM ORIGIN\r\n    switch (originalCurrency) {\r\n      //IF ORIGINAL CURRENCY IS USD\r\n      case \"USD\":\r\n        this.setState({ USD_wallet: USD_wallet - originalCurrencyAmount })\r\n        //AND WE ARE CONVERTING TO EUR\r\n        if (currency === \"EUR\") {\r\n          let newAmount = this.convertUSDtoEUR(originalCurrencyAmount)\r\n          this.setState({\r\n            EUR_wallet: EUR_wallet + newAmount,\r\n          })\r\n          //AND WE ARE CONVERTING TO CHF\r\n        } else {\r\n          let newAmount = this.convertUSDtoCHF(originalCurrencyAmount)\r\n          this.setState({ CHF_wallet: CHF_wallet + newAmount })\r\n        }\r\n        break\r\n\r\n      //IF ORIGINAL CURRENCY IS EUR\r\n      case \"EUR\":\r\n        console.log(\"Starting to convert from EUR\")\r\n        this.setState({ EUR_wallet: EUR_wallet - originalCurrencyAmount })\r\n        //AND WE ARE CONVERTING TO USD\r\n        if (currency === \"USD\") {\r\n          let newAmount = this.convertEURtoUSD(originalCurrencyAmount)\r\n          this.setState({ USD_wallet: USD_wallet + newAmount })\r\n          //AND WE ARE CONVERTING TO CHF\r\n        } else {\r\n          let newAmount = this.convertEURtoCHF(originalCurrencyAmount)\r\n          this.setState({ CHF_wallet: CHF_wallet + newAmount })\r\n        }\r\n        break\r\n\r\n      //IF ORIGINAL CURRENCY IS CHF\r\n      case \"CHF\":\r\n        console.log(\"Starting to convert from CHF\")\r\n        this.setState({ CHF_wallet: CHF_wallet - originalCurrencyAmount })\r\n        //AND WE ARE CONVERTING TO USD\r\n        if (currency === \"USD\") {\r\n          let newAmount = this.convertCHFtoUSD(originalCurrencyAmount)\r\n          this.setState({ USD_wallet: USD_wallet + newAmount })\r\n          //AND WE ARE CONVERTING TO EUR\r\n        } else {\r\n          let newAmount = this.convertCHFtoEUR(originalCurrencyAmount)\r\n          this.setState({ EUR_wallet: EUR_wallet + newAmount })\r\n        }\r\n        break\r\n      default:\r\n        //LOG ERROR MESSAGE IF NONE OF THE OTHER CASES ARE TRUE\r\n        break\r\n    }\r\n    //WE DO NOT NEED TO UPDATE THE TOTAL USD SUM SINCE WE ONLY CONVERTED BETWEEN WALLETS\r\n  }\r\n\r\n  //-------------------- HELPER FUNCTIONS ---------------------\r\n  //###### FROM USD TO OTHER CURRENCIES FUNCTIONS##############\r\n\r\n  //THIS FUNCTION CONVERTS USD TO EUR\r\n  convertUSDtoEUR = amount => {\r\n    let USDtoEUR_Rate = 0.9\r\n    let res = amount * USDtoEUR_Rate\r\n    return res\r\n  }\r\n\r\n  //THIS FUNCTION CONVERTS USD TO CHF\r\n  convertUSDtoCHF = amount => {\r\n    let USDtoCHF_Rate = 1.02\r\n    let res = amount * USDtoCHF_Rate\r\n    return res\r\n  }\r\n\r\n  //###### FROM EUR TO OTHER CURRENCIES FUNCTIONS ###############\r\n\r\n  //THIS FUNCTION CONVERTS EUR TO USD\r\n  convertEURtoUSD = amount => {\r\n    //TODO: GET FRESH RATES FROM AN API\r\n    let EURtoUSD_Rate = 1.12\r\n    let res = amount * EURtoUSD_Rate\r\n    return res\r\n  }\r\n\r\n  //THIS FUNCTION CONVERTS EUR TO CHF\r\n  convertEURtoCHF = amount => {\r\n    let EURtoCHF_Rate = 1.14\r\n    let res = amount * EURtoCHF_Rate\r\n    return res\r\n  }\r\n\r\n  //##### FROM CHF TO OTHER CURRENCIES FUNCTIONS\r\n\r\n  //THIS FUNCTION CONVERTS CHF TO USD\r\n  convertCHFtoUSD = amount => {\r\n    //TODO: GET FRESH RATES FROM AN API\r\n    let CHFtoUSD_Rate = 0.98\r\n    let res = amount * CHFtoUSD_Rate\r\n    return res\r\n  }\r\n\r\n  //THIS FUNCTION CONVERTS CHF TO EUR\r\n  convertCHFtoEUR = amount => {\r\n    let CHFtoEUR_Rate = 0.88\r\n    let res = amount * CHFtoEUR_Rate\r\n    return res\r\n  }\r\n\r\n  //THIS FUNCTION CALCULATES THE SUM OF CURRENCIES IN USD\r\n  calculateTotalSumInDollars = () => {\r\n    let { USD_wallet, EUR_wallet, CHF_wallet } = this.state\r\n    let sum =\r\n      USD_wallet +\r\n      this.convertEURtoUSD(EUR_wallet) +\r\n      this.convertCHFtoUSD(CHF_wallet)\r\n    console.log(\"Sum in USD: \" + sum)\r\n    this.setState({ totalValueUSD: sum })\r\n  }\r\n\r\n  componentWillMount() {\r\n    //FETCH USER DATA FROM DATABASE AND FEED INTO STATE\r\n\r\n    //CALCULATE THE TOTAL AMOUNT IN USD WHICH UPDATES THE STATE VALUE\r\n    this.calculateTotalSumInDollars()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Typography>\r\n            Hook up front-end to database to have data persistance.\r\n          </Typography>\r\n          {/* THIS COMPONENT DISPLAYS THE SUM OF CURRENCIES IN USD AT THE TOP OF THE PAGE */}\r\n          <TotalWalletValue sum={this.state.totalValueUSD} />\r\n\r\n          {/*THIS IS THE CURRENCY CARD/WALLET DISPLAY FOR USD */}\r\n          <CurrencyCard\r\n            prefix={\"USD\"}\r\n            currencyName={\"US Dollars\"}\r\n            balance={this.state.USD_wallet}\r\n            handleChange={this.handleChange}\r\n            handleAddCurrency={this.handleAddCurrency}\r\n            handleConvert={this.handleConvert}\r\n          />\r\n\r\n          {/*THIS IS THE CURRENCY CARD/WALLET DISPLAY FOR EUR */}\r\n          <CurrencyCard\r\n            prefix={\"EUR\"}\r\n            currencyName={\"EURO\"}\r\n            balance={this.state.EUR_wallet}\r\n            handleChange={this.handleChange}\r\n            handleAddCurrency={this.handleAddCurrency}\r\n            handleConvert={this.handleConvert}\r\n          />\r\n\r\n          {/*THIS IS THE CURRENCY CARD/WALLET DISPLAY FOR CHF */}\r\n          <CurrencyCard\r\n            prefix={\"CHF\"}\r\n            currencyName={\"Swiss Franc\"}\r\n            balance={this.state.CHF_wallet}\r\n            handleChange={this.handleChange}\r\n            handleAddCurrency={this.handleAddCurrency}\r\n            handleConvert={this.handleConvert}\r\n          />\r\n\r\n          {/*THIS COMPONENT MAPS THROUGH THE ACTIVITY ARRAY AND DISPLAYS\r\n            THEM UNDER THE CURRENCY CARDS*/}\r\n          <LatestActivity activity={this.state.activity} />\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Drawer from \"@material-ui/core/Drawer\"\r\nimport Hidden from \"@material-ui/core/Hidden\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\n//This adds the roboto font to all content\r\nimport \"./layout.css\"\r\n\r\n//import Link from Gatsby\r\nimport { Link } from \"gatsby\"\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n})\r\n\r\nclass Layout extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  }\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }))\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {[\"Balances\", \"Recipients\", \"Invite a friend!\"].map((text, index) => (\r\n            <div key={index}>\r\n              {index === 0 ? (\r\n                <Link to=\"/\">\r\n                  <ListItem button>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </Link>\r\n              ) : index === 1 ? (\r\n                <Link to=\"/recipients\">\r\n                  <ListItem button>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </Link>\r\n              ) : (\r\n                <Link to=\"/invite\">\r\n                  <ListItem button>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"About\", \"FAQ\", \"Legal\"].map((text, index) => (\r\n            <div key={index}>\r\n              {index === 0 ? (\r\n                <Link to=\"/about\">\r\n                  <ListItem button>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </Link>\r\n              ) : index === 1 ? (\r\n                <Link to=\"/faq\">\r\n                  <ListItem button>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </Link>\r\n              ) : (\r\n                <Link to=\"/legal\">\r\n                  <ListItem button>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Savvy.io Code Challenge\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {/* Add all child component here for consistent layout */}\r\n          <div className=\"content\">{children}</div>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // Injected by the documentation to work in an iframe.\r\n  // You won't need it on your project.\r\n  container: PropTypes.object,\r\n  theme: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Layout)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}